#!/usr/bin/env ruby
# bin/compile <build-dir> <cache-dir>

require "rbconfig"
require "fileutils"

include FileUtils

build_dir, cache_dir, env_dir, = ARGV

version = "4.0.3"
database_path = "groonga/database"

def sh(*command_line)
  puts(command_line.join(" "))
  system(*command_line) or exit(false)
end

def ruby(*command_line)
  command_line.unshift(RbConfig.ruby)
  sh(*command_line)
end

def remove_needless_files(prefix)
  rm(Dir.glob("#{prefix}/lib/**/*.a"))
  rm_r("#{prefix}/share/groonga/examples")
  rm_r("#{prefix}/share/groonga/images")
end

def link_executales(prefix)
  executable_dirs = ["bin", "sbin"]
  executable_dirs.each do |executable_dir|
    mkdir_p(executable_dir)
    Dir.chdir(executable_dir) do
      ln_s(Dir.glob("../#{prefix}/#{executable_dir}/*"), ".")
    end
  end
end

def fix_prefix_in_pc(prefix, real_prefix)
  pc_path = "#{prefix}/lib/pkgconfig/groonga.pc"
  pc_content = File.read(pc_path)
  File.open(pc_path, "w") do |pc|
    pc.puts(pc_content.gsub(/^prefix=.*$/, "prefix=#{real_prefix}"))
  end
end

Dir.chdir(build_dir) do
  puts("-----> Installing Groonga #{version}")

  base_url = "https://github.com/groonga/groonga/releases/download/v#{version}"
  base_name = "heroku-groonga-#{version}.tar.xz"
  sh("curl",
     "--silent",
     "--remote-name",
     "--location",
     "#{base_url}/#{base_name}")
  sh("tar", "xf", base_name)
  rm(base_name)

  prefix = "vendor/groonga"
  absolete_prefix = "#{build_dir}/#{prefix}"
  remove_needless_files(prefix)
  link_executales(prefix)
  fix_prefix_in_pc(prefix, absolete_prefix)

  puts("-----> Creating Groonga database")
  paths = [
    "#{absolete_prefix}/bin",
    ENV["PATH"],
  ]
  ENV["PATH"] = paths.compact.join(File::PATH_SEPARATOR)
  lib_dir = "#{absolete_prefix}/lib"
  ld_library_paths = [
    lib_dir,
    ENV["LD_LIBRARY_PATH"],
  ]
  ENV["LD_LIBRARY_PATH"] = ld_library_paths.compact.join(File::PATH_SEPARATOR)
  sh("groonga", "-n", database_path, "quit")

  puts("-----> Loading data")
  Dir.glob("groonga/*.grn").sort.each do |grn|
    sh("groonga", "--file", grn, database_path)
    rm(grn)
  end

  puts("-----> Setting environment variables")
  open("#{env_dir}/LD_LIBRARY_PATH", "w") do |env_file|
    env_file.write(ENV["LD_LIBRARY_PATH"])
  end
  open("#{env_dir}/PKG_CONFIG_PATH", "w") do |env_file|
    pkg_config_paths = [
      "#{lib_dir}/pkgconfig",
      ENV["PKG_CONFIG_PATH"]
    ]
    pkg_config_path = pkg_config_paths.compact.join(File::PATH_SEPARATOR)
    env_file.write(pkg_config_path)
  end

  app_dir = ENV["HOME"]
  profile_dir="#{build_dir}/.profile.d"
  FileUtils.mkdir_p(profile_dir)
  open("#{profile_dir}/groonga.sh", "w") do |env_file|
    env_file.write("export LD_LIBRARY_PATH=#{app_dir}/#{prefix}/lib:$LD_LIBRARY_PATH")
  end
end
