#!/usr/bin/env ruby
# bin/compile <build-dir> <cache-dir>

require "rbconfig"
require "fileutils"
require "json"
require "open-uri"

include FileUtils

build_dir, cache_dir, env_dir, = ARGV

base_path = "groonga"
database_path = "#{base_path}/data/db"

def detect_latest_version
  uri = "https://api.github.com/repos/groonga/groonga/releases"
  releases = open(uri) do |json|
    JSON.load(json)
  end
  latest_heroku_avaliable_release = releases.find do |release|
    assets = release["assets"] || []
    assets.any? do |asset|
      asset["name"].start_with?("heroku-groonga-")
    end
  end
  latest_heroku_avaliable_release["tag_name"].sub(/\Av/, "")
end

def sh(*command_line)
  puts(command_line.join(" "))
  system(*command_line) or exit(false)
end

def ruby(*command_line)
  command_line.unshift(RbConfig.ruby)
  sh(*command_line)
end

def load_environment_variables(env_dir)
  return {} if env_dir.nil?

  variables = {}
  Dir.chdir(env_dir) do
    Dir.glob("*") do |key|
      variables[key] = File.read(key)
    end
  end
  variables
end

def build_path_environment_value(paths)
  paths.compact.uniq.join(File::PATH_SEPARATOR)
end

def remove_needless_files(prefix)
  rm(Dir.glob("#{prefix}/lib/**/*.a"))
  rm_r("#{prefix}/share/groonga/examples")
  rm_r("#{prefix}/share/groonga/images")
end

def link_executales(prefix)
  executable_dirs = ["bin", "sbin"]
  executable_dirs.each do |executable_dir|
    mkdir_p(executable_dir)
    Dir.chdir(executable_dir) do
      ln_s(Dir.glob("../#{prefix}/#{executable_dir}/*"), ".")
    end
  end
end

def fix_prefix_in_pc(prefix, real_prefix)
  pc_path = "#{prefix}/lib/pkgconfig/groonga.pc"
  pc_content = File.read(pc_path)
  File.open(pc_path, "w") do |pc|
    pc.puts(pc_content.gsub(/^prefix=.*$/, "prefix=#{real_prefix}"))
  end
end

puts("-----> Loading environment variables")
environment_variables = load_environment_variables(env_dir)

version = environment_variables["GROONGA_VERSION"] || detect_latest_version

Dir.chdir(build_dir) do
  puts("-----> Installing Groonga #{version}")

  base_url = "https://github.com/groonga/groonga/releases/download/v#{version}"
  base_name = "heroku-groonga-#{version}.tar.xz"
  sh("curl",
     "--silent",
     "--remote-name",
     "--location",
     "#{base_url}/#{base_name}")
  sh("tar", "xf", base_name)
  rm(base_name)

  prefix = "vendor/groonga"
  absolete_prefix = "#{build_dir}/#{prefix}"
  remove_needless_files(prefix)
  link_executales(prefix)
  fix_prefix_in_pc(prefix, absolete_prefix)

  puts("-----> Creating Groonga database")
  paths = [
    "#{absolete_prefix}/bin",
    environment_variables["PATH"],
    ENV["PATH"],
  ]
  ENV["PATH"] = build_path_environment_value(paths)
  lib_dir = "#{absolete_prefix}/lib"
  base_ld_library_paths = [
    environment_variables["LD_LIBRARY_PATH"],
    ENV["LD_LIBRARY_PATH"],
  ]
  ld_library_paths = [
    lib_dir,
    "#{build_dir}/vendor/mecab/lib",
  ]
  ENV["LD_LIBRARY_PATH"] =
    build_path_environment_value(ld_library_paths + base_ld_library_paths)
  ENV["GRN_PLUGINS_DIR"] = "#{absolete_prefix}/lib/groonga/plugins"
  ENV["GRN_RUBY_SCRIPTS_DIR"] = "#{absolete_prefix}/lib/groonga/scripts/ruby"
  mecabrc_path = "#{build_dir}/vendor/mecab/etc/mecabrc"
  mecabrc_suffix = ".compiling"
  ENV["MECABRC"] = "#{mecabrc_path}#{mecabrc_suffix}"
  File.open(ENV["MECABRC"], "w") do |mecabrc_compiling_file|
    mecabrc = File.read(mecabrc_path)
    mecabrc_compiling = mecabrc.gsub(/\/app/) do
      build_dir
    end
    mecabrc_compiling_file.puts(mecabrc_compiling)
  end
  mkdir_p(File.dirname(database_path))
  sh("groonga", "-n", database_path, "quit")

  puts("-----> Loading data")
  Dir.glob("groonga/*.grn").sort.each do |grn|
    sh("groonga", "--file", grn, database_path)
    rm(grn)
  end

  puts("-----> Setting environment variables")
  File.open("#{env_dir}/LD_LIBRARY_PATH", "w") do |env_file|
    env_file.print(ENV["LD_LIBRARY_PATH"])
  end
  File.open("#{env_dir}/PKG_CONFIG_PATH", "w") do |env_file|
    pkg_config_paths = [
      "#{lib_dir}/pkgconfig",
      environment_variables["PKG_CONFIG_PATH"],
      ENV["PKG_CONFIG_PATH"]
    ]
    env_file.print(build_path_environment_value(pkg_config_paths))
  end

  app_dir = "$HOME"
  profile_dir="#{build_dir}/.profile.d"
  FileUtils.mkdir_p(profile_dir)
  File.open("#{profile_dir}/groonga.sh", "w") do |env_file|
    app_ld_library_path = [
      "#{app_dir}/#{prefix}/lib",
      "#{app_dir}/vendor/mecab/lib",
    ].join(File::PATH_SEPARATOR)
    env_file.puts(<<-GROONGA_SH)
export LD_LIBRARY_PATH="#{app_ld_library_path}:$LD_LIBRARY_PATH"
export GROONGA_BASE_PATH="#{app_dir}/#{base_path}"
export GROONGA_DATABASE_PATH="#{app_dir}/#{database_path}"
    GROONGA_SH
  end

  export_path = File.join(File.dirname(__FILE__), "..", "export")
  File.open(export_path, "a") do |export|
    paths = [
      "#{absolete_prefix}/sbin",
      "#{absolete_prefix}/bin",
    ]
    pkg_config_paths = [
      "#{absolete_prefix}/lib/pkgconfig",
    ]
    export.puts(<<-EXPORT)
export PATH="#{paths.join(File::PATH_SEPARATOR)}:$PATH"
export LD_LIBRARY_PATH="#{ld_library_paths.join(File::PATH_SEPARATOR)}:$LD_LIBRARY_PATH"
export PKG_CONFIG_PATH="#{pkg_config_paths.join(File::PATH_SEPARATOR)}:$PKG_CONFIG_PATH"
export GRN_PLUGINS_DIR="#{ENV["GRN_PLUGINS_DIR"]}"
export GRN_RUBY_SCRIPTS_DIR="#{ENV["GRN_RUBY_SCRIPTS_DIR"]}"
export MECABRC="#{ENV["MECABRC"]}"
export GROONGA_BASE_PATH="#{build_dir}/#{base_path}"
export GROONGA_DATABASE_PATH="#{build_dir}/#{database_path}"
    EXPORT
  end
end
